openapi: 3.0.1
info:
  title: Concerts Ruined My Life (CRML) API
  description: This is the API documentation for the CRML application, which allows users to search for events, flights, and hotels, and manage their trip details. The API supports both JSON and XML content types.
  version: 1.0.1
servers:
  - url: http://localhost:3000
    description: Local development server

tags:
  - name: Travel APIs
    description: Endpoints for searching flights, hotels, and geolocations.
  - name: Event APIs
    description: Endpoints for searching Ticketmaster events.
  - name: User Management
    description: Endpoints for user registration, login, logout, and authentication.
  - name: User Profile - Events
    description: Endpoints for managing events saved to a user's profile.
  - name: User Profile - Costpoints
    description: Endpoints for managing costs associated with a user's events.
  - name: Admin
    description: Administrative endpoints.

paths:
  # Travel API Endpoints
  /flights:
    get:
      tags:
        - Travel APIs
      summary: Search for flight offers
      description: Retrieves a list of flight offers based on departure and destination IATA codes, dates, and number of passengers.
      parameters:
        - name: from
          in: query
          required: true
          description: IATA code for the departure airport (e.g., VIE).
          schema:
            type: string
        - name: to
          in: query
          required: true
          description: IATA code for the destination airport (e.g., LHR).
          schema:
            type: string
        - name: departDate
          in: query
          required: true
          description: Departure date in YYYY-MM-DD format.
          schema:
            type: string
            format: date
        - name: returnDate
          in: query
          required: true
          description: Return date in YYYY-MM-DD format.
          schema:
            type: string
            format: date
        - name: adults
          in: query
          required: true
          description: Number of adult passengers.
          schema:
            type: integer
        - name: children
          in: query
          required: false
          description: Number of child passengers.
          schema:
            type: integer
      responses:
        '200':
          description: A list of formatted flight offers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flight'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flight'
        '400':
          description: Bad request, missing parameters.
        '500':
          description: Internal server error.

  /accomodations:
    get:
      tags:
        - Travel APIs
      summary: Search for hotels by city code
      description: Retrieves a list of hotels available in a specific city.
      parameters:
        - name: cityCode
          in: query
          required: true
          description: IATA code for the city (e.g., VIE).
          schema:
            type: string
      responses:
        '200':
          description: A list of hotels.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel'
        '400':
          description: Bad request, missing city code.

  /accomodationsgeo:
    get:
      tags:
        - Travel APIs
      summary: Search for hotels by geographic coordinates
      description: Retrieves a list of hotels near a specific latitude and longitude.
      parameters:
        - name: POI
          in: query
          required: true
          description: A string containing longitude and latitude, formatted as "lon,lat".
          schema:
            type: string
      responses:
        '200':
          description: A list of hotels near the specified coordinates.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel'

  /accomodationsoffers:
    get:
      tags:
        - Travel APIs
      summary: Get specific offers for a list of hotels
      description: Fetches detailed offers, including price, for a comma-separated list of hotel IDs.
      parameters:
        - name: hotelIds
          in: query
          required: true
          description: A comma-separated string of hotel IDs.
          schema:
            type: string
        - name: checkin
          in: query
          required: true
          description: Check-in date in YYYY-MM-DD format.
          schema:
            type: string
            format: date
        - name: checkout
          in: query
          required: true
          description: Check-out date in YYYY-MM-DD format.
          schema:
            type: string
            format: date
        - name: adults
          in: query
          required: true
          description: Number of adults.
          schema:
            type: integer
        - name: rooms
          in: query
          required: false
          description: Number of rooms required.
          schema:
            type: integer
      responses:
        '200':
          description: A list of detailed hotel offers.
          content:
            application/json:
              schema:
                type: object # Define schema for offers
            application/xml:
              schema:
                type: object
        '400':
          description: Bad request, missing parameters.

  /geoloc:
    get:
      tags:
        - Travel APIs
      summary: Get geocode for a Point of Interest (POI)
      description: Converts a location name (e.g., "O2 London") into geographic coordinates.
      parameters:
        - name: POI
          in: query
          required: true
          description: The name of the location to geocode.
          schema:
            type: string
      responses:
        '200':
          description: Geoapify API response with coordinates.
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object

  /geolocairport:
    get:
      tags:
        - Travel APIs
      summary: Find nearest airport by coordinates
      description: Finds the nearest international airport to a given set of coordinates and returns its details, including IATA code.
      parameters:
        - name: POI
          in: query
          required: true
          description: A string containing longitude and latitude, formatted as "lon,lat".
          schema:
            type: string
      responses:
        '200':
          description: Geoapify API response listing nearby airports.
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object

  # Event API Endpoints
  /event:
    get:
      tags:
        - Event APIs
      summary: Search for events
      description: Searches for events using a keyword (e.g., artist, city, or venue).
      parameters:
        - name: keyword
          in: query
          required: true
          description: The search term for the event.
          schema:
            type: string
      responses:
        '200':
          description: A list of formatted event objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '500':
          description: Internal server error.

  /eventdetails/{eventID}:
    get:
      tags:
        - Event APIs
      summary: Get details for a specific event
      description: Retrieves detailed information for a single event using its unique ID.
      parameters:
        - name: eventID
          in: path
          required: true
          description: The unique ID of the event.
          schema:
            type: string
      responses:
        '200':
          description: A detailed, formatted event object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found.

  # User Management Endpoints
  /login:
    post:
      tags:
        - User Management
      summary: User login
      description: Authenticates a user based on username and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful.
        '401':
          description: Invalid credentials.

  /register:
    post:
      tags:
        - User Management
      summary: User registration
      description: Creates a new user account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        '201':
          description: User created successfully.
        '409':
          description: Username or email already exists.

  /logout:
    get:
      tags:
        - User Management
      summary: User logout
      description: Destroys the user's session.
      responses:
        '200':
          description: Logged out successfully.

  /auth:
    get:
      tags:
        - User Management
      summary: Check authentication status
      description: Verifies if the user is currently logged in.
      responses:
        '200':
          description: User is authenticated.
          content:
            text/plain:
              schema:
                type: string
                example: "Everything good!"
        '402':
          description: User is not authenticated.

  # Database-related endpoints
  /profile/events:
    get:
      tags:
        - User Profile - Events
      summary: Get all events for a user
      description: (Protected) Retrieves all events saved to the currently logged-in user's profile.
      responses:
        '200':
          description: A list of saved events.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '401':
          description: Unauthorized.
    put:
      tags:
        - User Profile - Events
      summary: Add an event to a user's profile
      description: (Protected) Saves a new event to the user's profile.
      responses:
        '200':
          description: Event added successfully.
        '401':
          description: Unauthorized.

# Reusable Component Schemas
components:
  schemas:
    Event:
      type: object
      properties:
        ID:
          type: string
        name:
          type: string
        localDate:
          type: string
        localTime:
          type: string
        venue:
          type: string
        artist:
          type: string
        address:
          type: string
    Flight:
      type: object
      properties:
        ID:
          type: string
        name:
          type: string
        departureTime:
          type: string
        arrivalTime:
          type: string
        departureAirport:
          type: string
        arrivalAirport:
          type: string
        price:
          type: number
        currency:
          type: string
    Hotel:
      type: object
      properties:
        hotelId:
          type: string
        name:
          type: string
        distance:
          type: string
